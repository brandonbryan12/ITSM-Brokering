/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.85
 * Generated at: 2018-04-05 03:10:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.oauth2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sun.identity.shared.OAuth2Constants;
import com.sun.identity.idm.AMIdentity;
import com.iplanet.sso.SSOTokenManager;
import com.iplanet.sso.SSOToken;
import com.iplanet.am.util.SystemProperties;
import com.sun.identity.common.DNUtils;
import com.sun.identity.idm.IdType;
import com.iplanet.sso.SSOException;

public final class registerClient_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    String adminUserDN = "";
    AMIdentity adminUserId = null;
    try {
        SSOTokenManager sMgr = SSOTokenManager.getInstance();
        SSOToken ssoToken = sMgr.createSSOToken(request);

        // This will give you the 'amAdmin' user dn
        String adminUser = SystemProperties.get(
                "com.sun.identity.authentication.super.user");
        if (adminUser != null) {
            adminUserDN = DNUtils.normalizeDN(adminUser);
            // This will give you the 'amAdmin' Identity
            adminUserId = new AMIdentity(ssoToken, adminUser,
                    IdType.USER, "/", null);
        }

        // This will be your incoming user/token.
        AMIdentity user = new AMIdentity(ssoToken);

        if ((!adminUserDN.equals(DNUtils.normalizeDN(
                ssoToken.getPrincipal().getName()))) &&
                (!user.equals(adminUserId))) {

            out.println("You do not have the privilege to create a OAuth 2 client");
            return;
        }
    } catch (SSOException e) {
        response.sendRedirect("../UI/Login");
    }

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("    <title>Client Registration</title>\n");
      out.write("    <script src=\"../js/jquery.js\"></script>\n");
      out.write("\t<script>\n");
      out.write("        $(document).ready(function () {\n");
      out.write("\n");
      out.write("            //add buttons\n");
      out.write("            $('#add_url').click(function(){\n");
      out.write("                console.log(\"add_url Pressed\");\n");
      out.write("                var value = $(\"input[id='");
      out.print(OAuth2Constants.OAuth2Client.REDIRECT_URI);
      out.write("']\").val();\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.REDIRECT_URI);
      out.write("']\")\n");
      out.write("                        .append(\"<option value=\\\"\" + value + \"\\\">\" + value + \"</option>\");\n");
      out.write("            });\n");
      out.write("            $('#add_scope').click(function(){\n");
      out.write("                console.log(\"add_scope Pressed\");\n");
      out.write("                var value = $(\"input[id='");
      out.print(OAuth2Constants.OAuth2Client.SCOPES);
      out.write("']\").val();\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.SCOPES);
      out.write("']\")\n");
      out.write("                        .append(\"<option value=\\\"\" + value + \"\\\">\" + value + \"</option>\");\n");
      out.write("            });\n");
      out.write("            $('#add_default_scope').click(function(){\n");
      out.write("                console.log(\"add_default_scope Pressed\");\n");
      out.write("                var value = $(\"input[id='");
      out.print(OAuth2Constants.OAuth2Client.DEFAULT_SCOPES);
      out.write("']\").val();\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.DEFAULT_SCOPES);
      out.write("']\")\n");
      out.write("                        .append(\"<option value=\\\"\" + value + \"\\\">\" + value + \"</option>\");\n");
      out.write("            });\n");
      out.write("            $('#add_display_name').click(function(){\n");
      out.write("                console.log(\"add_display_name Pressed\");\n");
      out.write("                var value = $(\"input[id='");
      out.print(OAuth2Constants.OAuth2Client.NAME);
      out.write("']\").val();\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.NAME);
      out.write("']\")\n");
      out.write("                        .append(\"<option value=\\\"\" + value + \"\\\">\" + value + \"</option>\");\n");
      out.write("            });\n");
      out.write("            $('#add_dispaly_description').click(function(){\n");
      out.write("                console.log(\"add_dispaly_description Pressed\");\n");
      out.write("                var value = $(\"input[id='");
      out.print(OAuth2Constants.OAuth2Client.DESCRIPTION);
      out.write("']\").val();\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.DESCRIPTION);
      out.write("']\")\n");
      out.write("                        .append(\"<option value=\\\"\" + value + \"\\\">\" + value + \"</option>\");\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            //remove buttons\n");
      out.write("            $('#remove_url').click(function(){\n");
      out.write("                console.log(\"remove_url Pressed\");\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.REDIRECT_URI);
      out.write("'] option:selected\").remove();\n");
      out.write("            });\n");
      out.write("            $('#remove_scope').click(function(){\n");
      out.write("                console.log(\"remove_scope Pressed\");\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.SCOPES);
      out.write("'] option:selected\").remove();\n");
      out.write("            });\n");
      out.write("            $('#remove_default_scope').click(function(){\n");
      out.write("                console.log(\"remove_default_scope Pressed\");\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.DEFAULT_SCOPES);
      out.write("'] option:selected\").remove();\n");
      out.write("            });\n");
      out.write("            $('#remove_display_name').click(function(){\n");
      out.write("                console.log(\"remove_display_name Pressed\");\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.NAME);
      out.write("'] option:selected\").remove();\n");
      out.write("            });\n");
      out.write("            $('#remove_display_description').click(function(){\n");
      out.write("                console.log(\"remove_display_description Pressed\");\n");
      out.write("                $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.DESCRIPTION);
      out.write("'] option:selected\").remove();\n");
      out.write("            });\n");
      out.write("\n");
      out.write("              //form submit\n");
      out.write("            $('#client').submit(function(){\n");
      out.write("                /*\n");
      out.write("                Data should be in this form\n");
      out.write("                 {\n");
      out.write("                 \"client_id\":[\"testClient\"],\n");
      out.write("         Â Â Â Â Â Â Â Â \"realm\":[\"/\"]\n");
      out.write("         Â Â Â Â Â Â Â Â \"userpassword\":[\"secret12\"],\n");
      out.write("         Â Â Â Â Â Â Â Â \"com.forgerock.openam.oauth2provider.clientType\":[\"Confidential\"],\n");
      out.write("         Â Â Â Â Â Â Â Â \"com.forgerock.openam.oauth2provider.redirectionURIs\":\n");
      out.write("         Â Â Â Â Â Â Â Â Â Â Â Â [\"www.client.com\",\"www.example.com\"],\n");
      out.write("         Â Â Â Â Â Â Â Â \"com.forgerock.openam.oauth2provider.scopes\":[\"cn\",\"sn\"],\n");
      out.write("         Â Â Â Â Â Â Â Â \"com.forgerock.openam.oauth2provider.defaultScopes\":[\"cn\"],\n");
      out.write("         Â Â Â Â Â Â Â Â \"com.forgerock.openam.oauth2provider.name\":[\"My Test Client\"],\n");
      out.write("         Â Â Â Â Â Â Â Â \"com.forgerock.openam.oauth2provider.description\":[\"OAuth 2.0 Client\"]\n");
      out.write("                 }\n");
      out.write("                 */\n");
      out.write("                var jsonData = {};\n");
      out.write("                console.log(\"client submit\");\n");
      out.write("                var s = \"");
      out.print(OAuth2Constants.OAuth2Client.USERPASSWORD);
      out.write("\".replace(/\\./g, \"\\\\\\\\.\");\n");
      out.write("                var password1 = $(\"#\" + s).val();\n");
      out.write("                s = s + \"2\";\n");
      out.write("                var password2 = $(\"#\" + s).val();\n");
      out.write("                //password not the same\n");
      out.write("                if (password1 != password2){\n");
      out.write("                    $('#message').html(\"<b>Client password must be the same.<b><br><br>\");\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                //get the options arrays\n");
      out.write("                var redirection_options = $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.REDIRECT_URI);
      out.write("']\")\n");
      out.write("                        .prop('options');\n");
      out.write("                var scopes_options = $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.SCOPES);
      out.write("']\")\n");
      out.write("                        .prop('options');\n");
      out.write("                var default_scope_options = $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.DEFAULT_SCOPES);
      out.write("']\")\n");
      out.write("                        .prop('options');\n");
      out.write("                var display_names_options = $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.NAME);
      out.write("']\")\n");
      out.write("                        .prop('options');\n");
      out.write("                var display_descriptions_options = $(\"select[id='");
      out.print(OAuth2Constants.OAuth2Client.DESCRIPTION);
      out.write("']\")\n");
      out.write("                        .prop('options');\n");
      out.write("\n");
      out.write("                s = \"");
      out.print(OAuth2Constants.OAuth2Client.CLIENT_ID);
      out.write("\".replace(/\\./g, \"\\\\\\\\.\");\n");
      out.write("                var client_id = $(\"#\" + s).val();\n");
      out.write("                if (client_id.length <= 0){\n");
      out.write("                    $('#message').html(\"<b>Client ID is required.<b><br><br>\");\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                s = \"");
      out.print(OAuth2Constants.OAuth2Client.REALM);
      out.write("\".replace(/\\./g, \"\\\\\\\\.\");\n");
      out.write("                var realm = $(\"#\" + s).val();\n");
      out.write("                if (realm.length <= 0){\n");
      out.write("                    $('#message').html(\"<b>Realm is required.<b><br><br>\");\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                var clientType = $(\"input[name='");
      out.print(OAuth2Constants.OAuth2Client.CLIENT_TYPE);
      out.write("']:checked\").val();\n");
      out.write("                if (realm === 'undefined' || realm.length <= 0){\n");
      out.write("                    $('#message').html(\"<b>Client Type is required.<b><br><br>\");\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                //add user, pass, and realm to the dat json object\n");
      out.write("                var temp = new Array();\n");
      out.write("                temp.push(client_id);\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.CLIENT_ID);
      out.write("\"] = temp;\n");
      out.write("                temp = new Array();\n");
      out.write("                temp.push(password1);\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.USERPASSWORD);
      out.write("\"] = temp;\n");
      out.write("                temp = new Array();\n");
      out.write("                temp.push(realm);\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.REALM);
      out.write("\"] = temp;\n");
      out.write("                temp = new Array();\n");
      out.write("                temp.push(clientType);\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.CLIENT_TYPE);
      out.write("\"] = temp;\n");
      out.write("\n");
      out.write("\n");
      out.write("                //get the selection options as a single string\n");
      out.write("                temp = new Array();\n");
      out.write("                for (var i= 0; i < redirection_options.length; i++){\n");
      out.write("                    temp.push(redirection_options[i].value);\n");
      out.write("                }\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.REDIRECT_URI);
      out.write("\"] = temp;\n");
      out.write("\n");
      out.write("                temp = new Array();\n");
      out.write("                for (var i= 0; i < scopes_options.length; i++){\n");
      out.write("                    temp.push(scopes_options[i].value);\n");
      out.write("                }\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.SCOPES);
      out.write("\"] = temp;\n");
      out.write("\n");
      out.write("                temp = new Array();\n");
      out.write("                for (var i= 0; i < default_scope_options.length; i++){\n");
      out.write("                    temp.push(default_scope_options[i].value);\n");
      out.write("                }\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.DEFAULT_SCOPES);
      out.write("\"] = temp;\n");
      out.write("\n");
      out.write("                temp = new Array();\n");
      out.write("                for (var i= 0; i < display_names_options.length; i++){\n");
      out.write("                    temp.push(display_names_options[i].value);\n");
      out.write("                }\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.NAME);
      out.write("\"] = temp;\n");
      out.write("\n");
      out.write("                temp = new Array();\n");
      out.write("                for (var i= 0; i < display_descriptions_options.length; i++){\n");
      out.write("                    temp.push(display_descriptions_options[i].value);\n");
      out.write("                }\n");
      out.write("                jsonData[\"");
      out.print(OAuth2Constants.OAuth2Client.DESCRIPTION);
      out.write("\"] = temp;\n");
      out.write("\n");
      out.write("                $.ajax({\n");
      out.write("                    headers: {\n");
      out.write("                        Accept : \"application/json; charset=utf-8\",\n");
      out.write("                        \"Content-Type\": \"application/json; charset=utf-8\"\n");
      out.write("                    },\n");
      out.write("                    type: \"POST\",\n");
      out.write("                    url: \"../frrest/oauth2/client/?_action=create\",\n");
      out.write("                    cache: false,\n");
      out.write("                    data: JSON.stringify(jsonData)\n");
      out.write("                }).done(function( msg ) {\n");
      out.write("                    $('#message').html(\"<b>Client Created.<b><br><br>\");\n");
      out.write("                }).fail(function( jqXHR, textStatus ) {\n");
      out.write("                    $('#message').html(\"<b>Client Creation Failed.<b><br><br>\");\n");
      out.write("                });\n");
      out.write("                return false;\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\t</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<h1>Register a Client</h1>\n");
      out.write("\t<form name=\"client\" action=\"\" method=\"POST\" id=\"client\">\n");
      out.write("\t\t<div id=\"message\"></div>\n");
      out.write("        Realm:<br>\n");
      out.write("        <input type=\"input\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.REALM);
      out.write("\" value=\"\" id=\"");
      out.print(OAuth2Constants.OAuth2Client.REALM);
      out.write("\"/>\n");
      out.write("        <br><br>\n");
      out.write("        Client ID:<br>\n");
      out.write("        <input type=\"input\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.CLIENT_ID);
      out.write("\" value=\"\" id=\"");
      out.print(OAuth2Constants.OAuth2Client.CLIENT_ID);
      out.write("\"/>\n");
      out.write("        <br><br>\n");
      out.write("\t\tClient Password:<br>\n");
      out.write("        <input type=\"password\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.USERPASSWORD);
      out.write("\" value=\"\" id=\"");
      out.print(OAuth2Constants.OAuth2Client.USERPASSWORD);
      out.write("\"/>\n");
      out.write("        <br><br>\n");
      out.write("\t\tClient Password: (confirm)<br>\n");
      out.write("        <input type=\"password\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.USERPASSWORD);
      out.write("2\" value=\"\" id=\"");
      out.print(OAuth2Constants.OAuth2Client.USERPASSWORD);
      out.write("2\"/>\n");
      out.write("        <br><br>\n");
      out.write("\t\tClient Type:<br>\n");
      out.write("        <input type=\"radio\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.CLIENT_TYPE);
      out.write("\" value=\"Confidential\" checked /><br>\n");
      out.write("\t    <input type=\"radio\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.CLIENT_TYPE);
      out.write("\" value=\"Public\"/>\n");
      out.write("        <br><br>\n");
      out.write("\t\tRedirection URL(s):<br>\n");
      out.write("        <select id=\"");
      out.print(OAuth2Constants.OAuth2Client.REDIRECT_URI);
      out.write("\" multiple=\"single\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.REDIRECT_URI);
      out.write("\"></select>\n");
      out.write("        <input type=\"button\" name=\"remove_url\" id=\"remove_url\" value=\"Remove\"/><br>\n");
      out.write("\t\t<input type=\"text\" name=\"url\" value=\"\" id =\"");
      out.print(OAuth2Constants.OAuth2Client.REDIRECT_URI);
      out.write("\"/>\n");
      out.write("        <input type=\"button\" name=\"add_url\" id=\"add_url\" value=\"Add\"/>\n");
      out.write("        <br><br>\n");
      out.write("\t\tScope(s):<br>\n");
      out.write("        <select id=\"");
      out.print(OAuth2Constants.OAuth2Client.SCOPES);
      out.write("\" multiple=\"single\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.SCOPES);
      out.write("\"></select>\n");
      out.write("        <input type=\"button\" name=\"remove_scope\" id=\"remove_scope\" value=\"Remove\"/>\n");
      out.write("        <br>\n");
      out.write("        <input type=\"text\" name=\"url\" value=\"\" id =\"");
      out.print(OAuth2Constants.OAuth2Client.SCOPES);
      out.write("\"/>\n");
      out.write("        <input type=\"button\" name=\"add_scope\" id=\"add_scope\" value=\"Add\"/>\n");
      out.write("        <br><br>\n");
      out.write("\t\tDefault Scope(s):<br>\n");
      out.write("        <select id=\"");
      out.print(OAuth2Constants.OAuth2Client.DEFAULT_SCOPES);
      out.write("\" multiple=\"single\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.DEFAULT_SCOPES);
      out.write("\"></select>\n");
      out.write("        <input type=\"button\" name=\"remove_default_scope\" id=\"remove_default_scope\" value=\"Remove\"/>\n");
      out.write("        <br>\n");
      out.write("        <input type=\"text\" name=\"url\" value=\"\" id =\"");
      out.print(OAuth2Constants.OAuth2Client.DEFAULT_SCOPES);
      out.write("\"/>\n");
      out.write("        <input type=\"button\" name=\"add_default_scope\" id=\"add_default_scope\" value=\"Add\"/>\n");
      out.write("        <br><br>\n");
      out.write("\t\tDisplay Name(s):<br>\n");
      out.write("        <select id=\"");
      out.print(OAuth2Constants.OAuth2Client.NAME);
      out.write("\" multiple=\"single\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.NAME);
      out.write("\"></select>\n");
      out.write("        <input type=\"button\" name=\"remove_display_name\" id=\"remove_display_name\" value=\"Remove\"/><br>\n");
      out.write("        <input type=\"text\" name=\"url\" value=\"\" id =\"");
      out.print(OAuth2Constants.OAuth2Client.NAME);
      out.write("\"/>\n");
      out.write("        <input type=\"button\" name=\"add_display_name\" id=\"add_display_name\" value=\"Add\"/><br><br>\n");
      out.write("        Display Description(s):<br>\n");
      out.write("        <select id=\"");
      out.print(OAuth2Constants.OAuth2Client.DESCRIPTION);
      out.write("\" multiple=\"single\" name=\"");
      out.print(OAuth2Constants.OAuth2Client.DESCRIPTION);
      out.write("\"></select>\n");
      out.write("        <input type=\"button\" name=\"remove_display_description\" id=\"remove_display_description\" value=\"Remove\"/><br>\n");
      out.write("        <input type=\"text\" name=\"url\" value=\"\" id =\"");
      out.print(OAuth2Constants.OAuth2Client.DESCRIPTION);
      out.write("\"/>\n");
      out.write("        <input type=\"button\" name=\"add_dispaly_description\" id=\"add_dispaly_description\" value=\"Add\"/><br><br>\n");
      out.write("\n");
      out.write("\t\t<input type=\"Submit\" name=\"save\" id=\"submit\"/>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t</form>\n");
      out.write("</body>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
