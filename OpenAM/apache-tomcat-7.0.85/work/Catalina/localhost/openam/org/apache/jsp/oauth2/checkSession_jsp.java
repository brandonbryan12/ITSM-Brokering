/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.85
 * Generated at: 2018-04-05 03:10:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.oauth2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.forgerock.openam.oauth2.openid.CheckSessionImpl;
import org.forgerock.openam.oauth2.openid.CheckSession;
import org.owasp.esapi.ESAPI;

public final class checkSession_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    CheckSession checkSession = new CheckSessionImpl();
    String cookieName = checkSession.getCookieName();
    String clientSessionURI = checkSession.getClientSessionURI(request);
    Boolean validSession = checkSession.getValidSession(request);


      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title></title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<script src=\"../../js/sha256.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("    window.addEventListener(\"message\", receiveMessage, false);\n");
      out.write("    var client_id;\n");
      out.write("    function receiveMessage(e){\n");
      out.write("        data = e.data.split(' ');\n");
      out.write("        client_id = data[0];\n");
      out.write("        var clientURI = \"");
      out.print(ESAPI.encoder().encodeForJavaScript(clientSessionURI));
      out.write("\";\n");
      out.write("        if (e.origin !== clientURI){\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("        var session_state = data[1];\n");
      out.write("        var opbs = getBrowserState();\n");
      out.write("        var ss = CryptoJS.SHA256(client_id + e.origin  + opbs);\n");
      out.write("        if (session_state == ss) {\n");
      out.write("            stat = 'unchanged';\n");
      out.write("        } else {\n");
      out.write("            stat = 'changed';\n");
      out.write("        }\n");
      out.write("        e.source.postMessage(stat, e.origin);\n");
      out.write("     }\n");
      out.write("\n");
      out.write("    function getBrowserState(){\n");
      out.write("        var validSession = \"");
      out.print(validSession);
      out.write("\";\n");
      out.write("\n");
      out.write("        if (!validSession){\n");
      out.write("            return \"\";\n");
      out.write("        }\n");
      out.write("        var cookieName = \"");
      out.print(ESAPI.encoder().encodeForJavaScript(cookieName));
      out.write("\" + \"=\";\n");
      out.write("        var cookies = document.cookie+\";\";\n");
      out.write("        var cookieStart = cookies.indexOf(cookieName);\n");
      out.write("        if (cookieStart != -1) {\n");
      out.write("            var end = cookies.indexOf(\";\", cookieStart);\n");
      out.write("            return unescape(cookies.substring(cookieStart + cookieName.length, end));\n");
      out.write("        }\n");
      out.write("        return \"\";\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
